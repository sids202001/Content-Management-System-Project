<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Blog Post Visualization</title>
    <!-- Include Chart.js from CDN -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <a href="/dashboard">&larr; Back</a>
    <div class="admin-title">
        <h2>Blog Post Visualization</h2>
    </div>

    <div class="chart-container" style="position: relative; height:40vh; width:80vw;">
        <canvas id="myChart"></canvas>
    </div>

    <div class="chart-container" style="position: relative; height:40vh; width:80vw; margin-top: 40px;">
        <canvas id="genreChart"></canvas>
    </div>

    <script>
    // Ensure the DOM is fully loaded before executing the script
    document.addEventListener('DOMContentLoaded', function () {
        // Fetch and plot cumulative posts over time
        fetch('/api/postsByDate')
    .then(response => response.json())
    .then(data => {
        const ctx = document.getElementById('myChart').getContext('2d');
        
        // Map the dates using Date methods
        const labels = data.map(item => {
            const date = new Date(item.createdAt);
            // Format date as 'YYYY-MM-DD'
            return date.toISOString().split('T')[0];
        });

        const values = data.map(item => item.cumulativeCount);

        const myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Cumulative Number of Posts',
                    data: values,
                    backgroundColor: 'rgba(153, 102, 255, 0.2)',
                    borderColor: 'rgba(153, 102, 255, 1)',
                    borderWidth: 1,
                    fill: false
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Total Posts'
                        }
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'Date'
                        }
                    }
                },
                elements: {
                    line: {
                        tension: 0 // Straight lines, no curves
                    }
                }
            }
        });
    })
    .catch(error => console.error('Error loading the data:', error));
        // Fetch and plot posts by genre
        fetch('/api/postsByGenre')
            .then(response => response.json())
            .then(data => {
                const ctx = document.getElementById('genreChart').getContext('2d');
                const labels = Object.keys(data);
                const values = Object.values(data);

                const genreChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Number of Posts by Genre',
                            data: values,
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.2)',
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(255, 206, 86, 0.2)',
                                'rgba(75, 192, 192, 0.2)'
                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 192, 1)'
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: 'Total Posts'
                                }
                            }
                        }
                    }
                });
            })
            .catch(error => console.error('Error loading the genre data:', error));
          });
    </script>
</body>
</html>
